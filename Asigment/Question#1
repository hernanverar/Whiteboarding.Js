Question #1: Turning Strings to URLs
URLs cannot have spaces. Instead, all spaces in a string are replaced with %20. Write an algorithm that replaces all spaces in a string with %20.

You may not use the replace() method or regular expressions to solve this problem. Solve the problem with and without recursion.

Example
Input: "Jasmine Ann Jones"

Output: "Jasmine%20Ann%20Jones"

Answer # 1 In Javascript 

//pseoudocode
 
  //Iterative Approach
  
function replaceSpaces (inputString) {

   // Initialize an empty string to store the result
  let result = "";

   // Loop through each character in the input string
  for (let i = 0; i < inputString.length; i++) {

     // Check if the current character is a space
    if (stringRecursive [i] === " ") {

     // If it's a space, append "%20" to the result
      result += "20%";
    }
    else {
       // If it's not a space, append the character to the result
      result += inputString[i];
    }
  }
   
       // Return the final result
      return result;
  
}

// Example usage:
const inputString = "Jasmine Ann Jones";
const OutputString = replaceSpaces (inputString) 
 //outputString: "Jasmine%20Ann%20Jones"


 //Recursive approach

 function replaceSpaces(inputString, index = 0, result = "") {
  if (index === inputString.length) {
    result += "%20";
  }
  else {
    result += inputString[index];
  }

  return replaceSpaces(inputString, index + 1,result)
 }